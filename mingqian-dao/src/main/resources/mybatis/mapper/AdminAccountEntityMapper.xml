<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingqian.dao.mall.mapper.AdminAccountEntityMapper" >
  <resultMap id="BaseResultMap" type="com.mingqian.domain.mybatis.entity.AdminAccountEntity" >
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="LOGIN_PWD" property="loginPwd" jdbcType="VARCHAR" />
    <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="EMP_CODE" property="empCode" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    USER_ID, LOGIN_NAME, LOGIN_PWD, REAL_NAME, EMAIL, EMP_CODE, CREATE_TIME, UPDATE_TIME, 
    STATUS
  </sql>

  <!--通过用户名和密码查询用户信息-->
  <select id="selectUserByUserNameAndPassword" resultMap="BaseResultMap">
    select
          <include refid="Base_Column_List" />
    from
          ea_admin_account
    where
          LOGIN_NAME = #{userName}
    and
          LOGIN_PWD = #{password}
    and
          STATUS = 1
  </select>

  <select id="selectAdminAccountByUserNameAndPassword" resultMap="BaseResultMap">
    select
          <include refid="Base_Column_List" />
    from
           ea_admin_account
    where
           LOGIN_NAME = #{userName}
    and
           LOGIN_PWD = #{password}

        <if test="status != null and status!=''">
          and STATUS = #{status}
        </if>
  </select>
  
  <!--查询用户列表-->
  <select id="selectAdminAccountList" parameterType="com.mingqian.domain.vo.adminAccount.AdminAccountParamVo" resultMap="BaseResultMap">
    select
           <include refid="Base_Column_List" />
    from
            ea_admin_account
    where
            1=1
    and
            STATUS = '1'

            <if test="name != null and name!=''">
                 and REAL_NAME like CONCAT(CONCAT('%',#{name}),'%')
            </if>
    order by
            CREATE_TIME desc
    limit
            #{rowStart}, #{rowEnd}

  </select>

  <!--查询用户数量-->
  <select id="selectAdminAccountCount" parameterType="com.mingqian.domain.vo.adminAccount.AdminAccountParamVo" resultType="java.lang.Integer">
    select
            count(*)
    from
            ea_admin_account
    where
            1=1
    and
            STATUS = '1'

           <if test="name != null and name!=''">
               and REAL_NAME like CONCAT(CONCAT('%',#{name}),'%')
          </if>
  </select>

  <!--添加用户-->
  <insert id="insertAdminAccount" parameterType="com.mingqian.domain.vo.adminAccount.AdminAccountVo">
    insert into ea_admin_account (LOGIN_NAME, LOGIN_PWD,
    REAL_NAME, EMAIL,
    CREATE_TIME, UPDATE_TIME, STATUS
    )
    values ( #{loginName,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR},
    #{realName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    sysdate(), sysdate(), #{status,jdbcType=CHAR}
    )
  </insert>

  <!--通过用户id获取用户信息-->
  <select id="selectAdminAccountBy" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
          <include refid="Base_Column_List" />
    from
          ea_admin_account
    where
          USER_ID = #{id,jdbcType=BIGINT}
  </select>

  <!--修改用户信息-->
  <update id="updateAdminAccount" parameterType="com.mingqian.domain.vo.adminAccount.AdminAccountVo">
    update ea_admin_account
    <set >
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        LOGIN_PWD = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>

  <!--修改用户密码-->
  <update id="updateAdminAccountPassword">
    update ea_admin_account set LOGIN_PWD = #{password} where  USER_ID = #{userId}
  </update>

  <!--通过用户id删除用户-->
  <update id="deleteAdminAccountBy">
    update ea_admin_account set  STATUS = '0' where USER_ID = #{userId}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ea_admin_account
    where USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ea_admin_account
    where USER_ID = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mingqian.domain.mybatis.entity.AdminAccountEntity" >
    insert into ea_admin_account (USER_ID, LOGIN_NAME, LOGIN_PWD, 
      REAL_NAME, EMAIL, EMP_CODE, 
      CREATE_TIME, UPDATE_TIME, STATUS
      )
    values (#{userId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{empCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mingqian.domain.mybatis.entity.AdminAccountEntity" >
    insert into ea_admin_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="loginName != null" >
        LOGIN_NAME,
      </if>
      <if test="loginPwd != null" >
        LOGIN_PWD,
      </if>
      <if test="realName != null" >
        REAL_NAME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="empCode != null" >
        EMP_CODE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="empCode != null" >
        #{empCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingqian.domain.mybatis.entity.AdminAccountEntity" >
    update ea_admin_account
    <set >
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        LOGIN_PWD = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="empCode != null" >
        EMP_CODE = #{empCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingqian.domain.mybatis.entity.AdminAccountEntity" >
    update ea_admin_account
    set LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      LOGIN_PWD = #{loginPwd,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      EMP_CODE = #{empCode,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=CHAR}
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
</mapper>